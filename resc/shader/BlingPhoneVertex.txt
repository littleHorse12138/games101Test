#version 330 core

layout(location = 0) in vec3 aPos;   // 顶点位置
layout(location = 1) in vec3 aNormal; // 顶点法线
layout(location = 2) in vec3 aColor;

out vec3 FragPos;  // 传递给片段着色器的片段位置
out vec3 Normal;   // 传递给片段着色器的法线
out vec3 FragColor;

uniform mat4 model;    // 模型矩阵
uniform mat4 view;     // 视图矩阵
uniform mat4 projection; // 投影矩阵

void main()
{
    FragColor = aColor;
    FragPos = vec3(model * vec4(aPos, 1.0)); // 计算片段的世界空间位置
    Normal = mat3(transpose(inverse(model))) * aNormal; // 将法线转换到世界空间
    gl_Position = projection *(view * vec4(FragPos, 1.0)); // 计算裁剪空间位置
}